// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using VocabCard.Data;

#nullable disable

namespace VocabCard.Migrations
{
    [DbContext(typeof(VoclearnContext))]
    [Migration("20241006123332_AddSeedData")]
    partial class AddSeedData
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("VocabCard.Models.Card", b =>
                {
                    b.Property<int>("CardId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("CardId"));

                    b.Property<string>("Example")
                        .HasColumnType("longtext");

                    b.Property<string>("Mean")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("UploadTime")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Word")
                        .HasColumnType("longtext");

                    b.HasKey("CardId");

                    b.ToTable("Card");

                    b.HasData(
                        new
                        {
                            CardId = 1,
                            Example = "Finding the keys was pure serendipity.",
                            Mean = "An unexpected pleasant discovery.",
                            UploadTime = new DateTime(2023, 10, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Word = "Serendipity"
                        },
                        new
                        {
                            CardId = 2,
                            Example = "The ephemeral beauty of autumn leaves.",
                            Mean = "Lasting for a very short time.",
                            UploadTime = new DateTime(2023, 9, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Word = "Ephemeral"
                        },
                        new
                        {
                            CardId = 3,
                            Example = "The petrichor after the rain was refreshing.",
                            Mean = "The pleasant smell after rain.",
                            UploadTime = new DateTime(2023, 9, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Word = "Petrichor"
                        },
                        new
                        {
                            CardId = 4,
                            Example = "Winning the game filled him with euphoria.",
                            Mean = "A feeling of intense excitement and happiness.",
                            UploadTime = new DateTime(2023, 9, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Word = "Euphoria"
                        },
                        new
                        {
                            CardId = 5,
                            Example = "He spoke with a hint of melancholy in his voice.",
                            Mean = "A deep, long-lasting sadness.",
                            UploadTime = new DateTime(2023, 9, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Word = "Melancholy"
                        },
                        new
                        {
                            CardId = 6,
                            Example = "The beauty of the sunset was ineffable.",
                            Mean = "Too great or extreme to be expressed in words.",
                            UploadTime = new DateTime(2023, 8, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Word = "Ineffable"
                        },
                        new
                        {
                            CardId = 7,
                            Example = "She experienced limerence for the first time.",
                            Mean = "The state of being infatuated or obsessed with another person.",
                            UploadTime = new DateTime(2023, 8, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Word = "Limerence"
                        },
                        new
                        {
                            CardId = 8,
                            Example = "He was the quintessential gentleman.",
                            Mean = "Representing the most perfect or typical example of something.",
                            UploadTime = new DateTime(2023, 8, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Word = "Quintessential"
                        },
                        new
                        {
                            CardId = 9,
                            Example = "He enjoyed the solitude of the mountains.",
                            Mean = "The state of being alone without feeling lonely.",
                            UploadTime = new DateTime(2023, 8, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Word = "Solitude"
                        },
                        new
                        {
                            CardId = 10,
                            Example = "Navigating the city was like moving through a labyrinth.",
                            Mean = "A complex maze.",
                            UploadTime = new DateTime(2023, 8, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Word = "Labyrinth"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
